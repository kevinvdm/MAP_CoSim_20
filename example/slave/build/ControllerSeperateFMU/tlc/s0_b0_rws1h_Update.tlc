%implements s0_b0_rws1h_Update "C"

%function Update(block, system) Output
%<SLibCGIRAccessLocalVar(4, 0, "")> %% rtb_IntegralGain
%<SLibCGIRAccessLocalVar(3, 0, "")> %% rtb_FilterCoefficient
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibCG_TrackDW(0)>\
/* Update for DiscreteIntegrator: '<S34>/Integrator' */
Controller_Seperate_DW->Integrator_DSTATE += Controller_Seperate_P.Integrator_gainval * rtb_IntegralGain;
/* Update for DiscreteIntegrator: '<S29>/Filter' */
Controller_Seperate_DW->Filter_DSTATE += Controller_Seperate_P.Filter_gainval * rtb_FilterCoefficient;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Update", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Update"))
%<SLibCG_AccessArg(0, 3, 0)>
%endif
%if SLibCG_ArgAccessed(0, 3, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Update", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Update"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 3, 0)>
%endif
%endfunction
%function UpdateFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 3, 0)
%<comma>%<::tSimStructType> * const Controller_Seperate_M\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 3, fcnProtoType)>
%endfunction
